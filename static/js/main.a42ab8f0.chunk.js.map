{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","useState","goods","setGoods","Default","sortBy","setSortBy","reversed","setReversed","useEffect","type","isReversed","sortedGoods","Length","sort","g1","g2","length","Alphabet","a","b","localeCompare","reverse","sortGoods","className","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,qBAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAASH,EAAOM,SAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCL,oBAAS,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KA2BAC,qBAAU,YAzBV,SAAmBC,GAAkC,IAArBC,EAAoB,wDAC5CC,EAAW,UAAOb,GAExB,OAAQW,GACN,KAAKZ,EAAOe,OACVD,EAAYE,MACV,SAACC,EAAIC,GAAL,OAAYD,EAAGE,OAASD,EAAGC,UAE7B,MAGF,KAAKnB,EAAOoB,SACVN,EAAYE,MAAK,SAACK,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAM3CT,GACFC,EAAYU,UAGdnB,EAASS,GAITW,CAAUlB,EAAQE,KACjB,CAACA,EAAUF,IAWd,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEd,KAAK,SACLc,UAAWC,IAAG,iBACZ,CAAE,WAAYpB,IAAWP,EAAOoB,WAClCQ,QAAS,WACPpB,EAAUR,EAAOoB,WALrB,iCAWA,wBACER,KAAK,SACLc,UAAWC,IAAG,oBACZ,CAAE,WAAYpB,IAAWP,EAAOe,SAClCa,QAAS,WACPpB,EAAUR,EAAOe,SALrB,4BAWA,wBACEH,KAAK,SACLc,UAAWC,IAAG,oBAAqB,CAAE,YAAalB,IAClDmB,QArCa,WACnBlB,GAAaD,IAiCT,qBAQCA,GAAYF,IAAWP,EAAOM,QAC7B,wBACEM,KAAK,SACLc,UAAU,4BACVE,QA1CI,WACZlB,GAAY,GACZF,EAAUR,EAAOM,UAqCX,mBAOE,gCAGN,6BACGF,EAAMyB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC9GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a42ab8f0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  Default,\n  Alphabet,\n  Length,\n}\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [sortBy, setSortBy] = useState(SortBy.Default);\n  const [reversed, setReversed] = useState(false);\n\n  function sortGoods(type:number, isReversed = false) {\n    const sortedGoods = [...goodsFromServer];\n\n    switch (type) {\n      case SortBy.Length: {\n        sortedGoods.sort(\n          (g1, g2) => g1.length - g2.length,\n        );\n        break;\n      }\n\n      case SortBy.Alphabet:\n        sortedGoods.sort((a, b) => a.localeCompare(b));\n        break;\n\n      default:\n    }\n\n    if (isReversed) {\n      sortedGoods.reverse();\n    }\n\n    setGoods(sortedGoods);\n  }\n\n  useEffect(() => {\n    sortGoods(sortBy, reversed);\n  }, [reversed, sortBy]);\n\n  const reversedSort = () => {\n    setReversed(!reversed);\n  };\n\n  const reset = () => {\n    setReversed(false);\n    setSortBy(SortBy.Default);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortBy !== SortBy.Alphabet })}\n          onClick={() => {\n            setSortBy(SortBy.Alphabet);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortBy !== SortBy.Length })}\n          onClick={() => {\n            setSortBy(SortBy.Length);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !reversed })}\n          onClick={reversedSort}\n        >\n          Reverse\n        </button>\n\n        {reversed || sortBy !== SortBy.Default ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        ) : <></>}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}